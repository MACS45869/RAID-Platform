// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RAIDPlatform.Data.Repositories.Context;

#nullable disable

namespace RAIDPlatform.Data.Repositories.Migrations
{
    [DbContext(typeof(ClientContext))]
    [Migration("20221129131049_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Category_Data_Map.Client_Application_Category_Data_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientApplicationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ClientDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientApplicationCategoryId");

                    b.HasIndex("ClientDataId");

                    b.ToTable("Client_Application_Category_Data_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Category_Data_Values.Client_Application_Category_Data_Values", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientApplicationCategoryDataMapId")
                        .HasColumnType("int");

                    b.Property<int>("Client_Application_Data_Value_ID")
                        .HasColumnType("int");

                    b.Property<string>("Client_Application_Data_Value_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Application_Data_Value_Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientApplicationCategoryDataMapId");

                    b.ToTable("Client_Application_Category_Data_Values", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Category.Client_Application_Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Client_Application_Category_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Application_Category_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Application_Category_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Client_Application_Category", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Client_Application_Security_Group_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Application_Security_Group_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Application_Security_Group_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ClientId");

                    b.ToTable("Client_Application_Security_Group", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group_Category_Map.Client_Application_Security_Group_Category_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientApplicationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ClientApplicationSecurityGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientApplicationCategoryId");

                    b.HasIndex("ClientApplicationSecurityGroupId");

                    b.ToTable("Client_Application_Security_Group_Category_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group_Feature_Map.Client_Application_Security_Group_Feature_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientApplicationSecurityGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ClientFeatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientApplicationSecurityGroupId");

                    b.HasIndex("ClientFeatureId");

                    b.ToTable("Client_Application_Security_Group_Feature_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Data.Client_Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationDataMapId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationDataMapId");

                    b.HasIndex("ClientId");

                    b.ToTable("Client_Data", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Features.Client_Features", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationFeatureMapId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationFeatureMapId");

                    b.HasIndex("ClientId");

                    b.ToTable("Client_Features", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Module_Map.Client_Module_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Client_Module_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Navigation_Feature_Map.Client_Navigation_Feature_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientFeatureId")
                        .HasColumnType("int");

                    b.Property<int>("ClientNavigationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientFeatureId");

                    b.HasIndex("ClientNavigationId");

                    b.ToTable("Client_Navigation_Feature_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Navigations.Client_Navigations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Client_Navigation_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Navigation_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Navigation_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Navigation_URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_Header")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Menu")
                        .HasColumnType("bit");

                    b.Property<int>("NavigationId")
                        .HasColumnType("int");

                    b.Property<int>("Parent_ID")
                        .HasColumnType("int");

                    b.Property<int>("Sequence_Number")
                        .HasColumnType("int");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Client_Navigations", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Parameter_Values.Client_Parameter_Values", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientParameterId")
                        .HasColumnType("int");

                    b.Property<bool?>("Client_Parameter_Value_Boolean")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Client_Parameter_Value_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Client_Parameter_Value_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Client_Parameter_Value_Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Client_Parameter_Value_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Parameter_Value_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Client_Parameter_Value_Numeric")
                        .HasColumnType("real");

                    b.Property<string>("Client_Parameter_Value_Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_Parameter_Value_Type")
                        .HasColumnType("int");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_Header")
                        .HasColumnType("bit");

                    b.Property<int>("Parent_ID")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientParameterId");

                    b.ToTable("Client_Parameter_Values", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Parameters.Client_Parameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Client_Parameter_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Parameter_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Parameter_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Parameter_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Client_Parameters", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Clients.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Client_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Client_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Primary_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Primary_Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Primary_Contact_Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Primary_Contact_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Primary_Contact_Landline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Primary_Contact_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Primary_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Primary_Landline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secondary_Contact_Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secondary_Contact_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secondary_Contact_Landline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secondary_Contact_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.User_Category_Map.User_Category_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientApplicationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserSecurityGroupMapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientApplicationCategoryId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserSecurityGroupMapId");

                    b.ToTable("User_Category_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.User_Security_Group_Map.User_Security_Group_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientApplicationSecurityGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientApplicationSecurityGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Security_Group_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Users.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("Designation_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_AD_User")
                        .HasColumnType("bit");

                    b.Property<int>("OrgHierarchyId")
                        .HasColumnType("int");

                    b.Property<string>("Org_Hierarchy_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportingToId")
                        .HasColumnType("int");

                    b.Property<string>("Reporting_To_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Status_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("User_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("User_OTP")
                        .HasColumnType("bit");

                    b.Property<bool>("User_OTP_Expired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("User_OTP_Expiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Type_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Data_Map.Application_Data_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("DataPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("DataPermissionId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Application_Data_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Feature_Map.Application_Feature_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("FeaturePermissionId")
                        .HasColumnType("int");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("FeaturePermissionId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Application_Feature_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Module_Map.Application_Module_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Application_Module_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Navigation_Map.Application_Navigation_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("NavigationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("NavigationId");

                    b.ToTable("Application_Navigation_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Parameter_Map.Application_Parameter_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ParameterId");

                    b.ToTable("Application_Parameter_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Applications.Applications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Application_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Application_Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Application_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Applications", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Data_Permissions.Data_Permissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataPermissionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Data_Permission_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data_Permission_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data_Permission_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Data_Permission_Type_Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Header")
                        .HasColumnType("bit");

                    b.Property<int>("Parent_ID")
                        .HasColumnType("int");

                    b.Property<int>("Sequence_Number")
                        .HasColumnType("int");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Data_Permissions", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Feature_Permissions.Feature_Permissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feature_Permission_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Permission_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Permission_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Header")
                        .HasColumnType("bit");

                    b.Property<int>("Parent_ID")
                        .HasColumnType("int");

                    b.Property<int>("Sequence_Number")
                        .HasColumnType("int");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Feature_Permissions", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Modules.Modules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modules_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modules_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modules_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Modules", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Navigation_Feature_Map.Navigation_Feature_Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FeaturePermissionId")
                        .HasColumnType("int");

                    b.Property<int>("NavigationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeaturePermissionId");

                    b.HasIndex("NavigationId");

                    b.ToTable("Navigation_Feature_Map", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Navigations.Navigations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_Header")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Menu")
                        .HasColumnType("bit");

                    b.Property<string>("Navigation_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navigation_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navigation_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navigation_URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Parent_ID")
                        .HasColumnType("int");

                    b.Property<int>("Sequence_Number")
                        .HasColumnType("int");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Navigations", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Parameter_Values.Parameter_Values", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Is_Header")
                        .HasColumnType("bit");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<bool>("Parameter_Value_Boolean")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Parameter_Value_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Parameter_Value_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Parameter_Value_Image")
                        .HasColumnType("tinyint");

                    b.Property<string>("Parameter_Value_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter_Value_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Parameter_Value_Numeric")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Parameter_Value_Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Parameter_Value_Type")
                        .HasColumnType("int");

                    b.Property<int>("Parent_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParameterId");

                    b.ToTable("Parameter_Values", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Parameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Created_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Parameter_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Updated_By_ID")
                        .HasColumnType("int");

                    b.Property<string>("Updated_By_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Parameters", (string)null);
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Category_Data_Map.Client_Application_Category_Data_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Application_Category.Client_Application_Category", "ClientApplicationCategory")
                        .WithMany()
                        .HasForeignKey("ClientApplicationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Data.Client_Data", "ClientData")
                        .WithMany()
                        .HasForeignKey("ClientDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientApplicationCategory");

                    b.Navigation("ClientData");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Category_Data_Values.Client_Application_Category_Data_Values", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Application_Category_Data_Map.Client_Application_Category_Data_Map", "ClientApplicationCategoryDataMap")
                        .WithMany()
                        .HasForeignKey("ClientApplicationCategoryDataMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientApplicationCategoryDataMap");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Category.Client_Application_Category", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Clients.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Applications.Applications", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Clients.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group_Category_Map.Client_Application_Security_Group_Category_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Application_Category.Client_Application_Category", "ClientApplicationCategory")
                        .WithMany()
                        .HasForeignKey("ClientApplicationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group", "ClientApplicationSecurityGroup")
                        .WithMany()
                        .HasForeignKey("ClientApplicationSecurityGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientApplicationCategory");

                    b.Navigation("ClientApplicationSecurityGroup");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group_Feature_Map.Client_Application_Security_Group_Feature_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group", "ClientApplicationSecurityGroup")
                        .WithMany()
                        .HasForeignKey("ClientApplicationSecurityGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Features.Client_Features", "ClientFeature")
                        .WithMany()
                        .HasForeignKey("ClientFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientApplicationSecurityGroup");

                    b.Navigation("ClientFeature");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Data.Client_Data", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Application_Data_Map.Application_Data_Map", "ApplicationDataMap")
                        .WithMany()
                        .HasForeignKey("ApplicationDataMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Clients.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationDataMap");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Features.Client_Features", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Application_Feature_Map.Application_Feature_Map", "ApplicationFeatureMap")
                        .WithMany()
                        .HasForeignKey("ApplicationFeatureMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Clients.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationFeatureMap");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Module_Map.Client_Module_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Clients.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Modules.Modules", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Navigation_Feature_Map.Client_Navigation_Feature_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Features.Client_Features", "ClientFeature")
                        .WithMany()
                        .HasForeignKey("ClientFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Navigations.Client_Navigations", "ClientNavigation")
                        .WithMany()
                        .HasForeignKey("ClientNavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientFeature");

                    b.Navigation("ClientNavigation");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Navigations.Client_Navigations", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Clients.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Parameter_Values.Client_Parameter_Values", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Parameters.Client_Parameters", "ClientParameter")
                        .WithMany()
                        .HasForeignKey("ClientParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientParameter");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Client_Parameters.Client_Parameters", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Clients.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.User_Category_Map.User_Category_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Application_Category.Client_Application_Category", "ClientApplicationCategory")
                        .WithMany()
                        .HasForeignKey("ClientApplicationCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Users.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.User_Security_Group_Map.User_Security_Group_Map", "UserSecurityGroupMap")
                        .WithMany()
                        .HasForeignKey("UserSecurityGroupMapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientApplicationCategory");

                    b.Navigation("User");

                    b.Navigation("UserSecurityGroupMap");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.User_Security_Group_Map.User_Security_Group_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Client_Application_Security_Group", "ClientApplicationSecurityGroup")
                        .WithMany()
                        .HasForeignKey("ClientApplicationSecurityGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Client.Users.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientApplicationSecurityGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Client.Users.Users", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Client.Clients.Clients", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Data_Map.Application_Data_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Applications.Applications", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Data_Permissions.Data_Permissions", "DataPermission")
                        .WithMany()
                        .HasForeignKey("DataPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Modules.Modules", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("DataPermission");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Feature_Map.Application_Feature_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Applications.Applications", "Application")
                        .WithMany("Application_Feature_Map")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Feature_Permissions.Feature_Permissions", "FeaturePermission")
                        .WithMany()
                        .HasForeignKey("FeaturePermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Modules.Modules", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId");

                    b.Navigation("Application");

                    b.Navigation("FeaturePermission");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Module_Map.Application_Module_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Applications.Applications", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Modules.Modules", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Navigation_Map.Application_Navigation_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Applications.Applications", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Modules.Modules", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Navigations.Navigations", "Navigation")
                        .WithMany()
                        .HasForeignKey("NavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Module");

                    b.Navigation("Navigation");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Application_Parameter_Map.Application_Parameter_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Applications.Applications", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Modules.Modules", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Parameters", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Module");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Navigation_Feature_Map.Navigation_Feature_Map", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Feature_Permissions.Feature_Permissions", "FeaturePermission")
                        .WithMany()
                        .HasForeignKey("FeaturePermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAIDPlatform.Data.Models.Master.Navigations.Navigations", "Navigation")
                        .WithMany()
                        .HasForeignKey("NavigationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeaturePermission");

                    b.Navigation("Navigation");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Parameter_Values.Parameter_Values", b =>
                {
                    b.HasOne("RAIDPlatform.Data.Models.Master.Parameters", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("RAIDPlatform.Data.Models.Master.Applications.Applications", b =>
                {
                    b.Navigation("Application_Feature_Map");
                });
#pragma warning restore 612, 618
        }
    }
}
